<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:integration="http://www.springframework.org/schema/integration"
	xmlns:jms="http://www.springframework.org/schema/integration/jms"
	xmlns:file="http://www.springframework.org/schema/integration/file"
	xmlns:stream="http://www.springframework.org/schema/integration/stream"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
			http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
			http://www.springframework.org/schema/integration
			http://www.springframework.org/schema/integration/spring-integration-1.0.xsd
			http://www.springframework.org/schema/integration/jms
			http://www.springframework.org/schema/integration/jms/spring-integration-jms-1.0.xsd
			http://www.springframework.org/schema/integration/stream
			http://www.springframework.org/schema/integration/stream/spring-integration-stream-1.0.xsd
			http://www.springframework.org/schema/integration/file
			http://www.springframework.org/schema/integration/file/spring-integration-file-1.0.xsd
			">
	
	<bean id="roomsManager" class="org.bigbluebutton.conference.RoomsManager">
		<property name="conferenceEventListener" ref="conferenceEventListener" />
	</bean>
			
	<bean id="participantsHandler" class="org.bigbluebutton.conference.service.participants.ParticipantsHandler">
		<property name="participantsApplication"> <ref local="participantsApplication"/></property>
		<property name="recorderApplication"> <ref local="recorderApplication"/></property>
	</bean>
	
	<bean id="participantsApplication" 
	    class="org.bigbluebutton.conference.service.participants.ParticipantsApplication">
		<property name="roomsManager"> <ref local="roomsManager"/></property>
	</bean>
	
	<bean id="participants.service" class="org.bigbluebutton.conference.service.participants.ParticipantsService">
		<property name="participantsApplication"> <ref local="participantsApplication"/></property>
	</bean>
	
	<!-- BEGIN JMS EVENTS -->
	<bean id="jmsRecorder" class="org.apache.activemq.command.ActiveMQQueue">
	    <constructor-arg index="0">
            <value>RecorderEventsQueue</value>
        </constructor-arg>
	</bean>
	
	<bean id="templateEvent" class="org.springframework.jms.core.JmsTemplate">
	    <property name="connectionFactory"><ref local="connectionFactory" /></property>
	    <property name="defaultDestination"><ref local="jmsRecorder" /> </property>
	</bean>
	
	<bean id="recorderApplication" class="org.bigbluebutton.conference.service.recorder.RecorderApplication">
		<property name="jmsTemplate"><ref local="templateEvent" /> </property>
	</bean>
	
	<!-- END JMS EVENTS -->
	<!-- BEGIN PRESENTATION -->	
	<bean id="presentationRoomsManager" class="org.bigbluebutton.conference.service.presentation.PresentationRoomsManager"/>
			
	<bean id="presentationHandler" class="org.bigbluebutton.conference.service.presentation.PresentationHandler">
		<property name="presentationApplication"> 
			<ref local="presentationApplication"/>
		</property>
		<property name="recorderApplication"> 
			<ref local="recorderApplication"/>
		</property>
		<property name="conversionUpdatesMessageListener"> 
			<ref local="messageListener"/>
		</property>
	</bean>
	
	<bean id="presentationApplication" class="org.bigbluebutton.conference.service.presentation.PresentationApplication">
		<property name="roomsManager"> 
			<ref local="presentationRoomsManager"/>
		</property>
	</bean>
	
	<bean id="presentation.service" class="org.bigbluebutton.conference.service.presentation.PresentationService">
		<property name="participantsApplication"> <ref local="participantsApplication"/></property>
		<property name="presentationApplication"> <ref local="presentationApplication"/></property>
	</bean>
		
    <bean id="connectionFactory" class="org.apache.activemq.ActiveMQConnectionFactory">
        <property name="brokerURL">
            <value>tcp://localhost:61616</value>
        </property>
    </bean>
    
    <bean id="destination" class="org.apache.activemq.command.ActiveMQQueue">
        <constructor-arg index="0">
            <value>UpdatesQueue</value>
        </constructor-arg>
    </bean>

	<bean id="conversionUpdatesProcessor" class="org.bigbluebutton.conference.service.presentation.ConversionUpdatesProcessor">
		<property name="presentationApplication"> <ref local="presentationApplication"/></property>
	</bean>

	<bean id="messageListener" class="org.bigbluebutton.conference.service.presentation.ConversionUpdatesMessageListener">
		<property name="conversionUpdatesProcessor" ref="conversionUpdatesProcessor" />
	</bean>

	<bean id="jmsContainer" class="org.springframework.jms.listener.DefaultMessageListenerContainer">
  		<property name="connectionFactory" ref="connectionFactory"/>
  		<property name="destination" ref="destination"/>
  		<property name="messageListener" ref="messageListener" />
	</bean>
  	<!-- END PRESENTATION -->
  	
  	<!-- BEGIN CHAT -->
  	<bean id="chatHandler" class="org.bigbluebutton.conference.service.chat.ChatHandler">
		<property name="chatApplication"> <ref local="chatApplication"/></property>
		<property name="recorderApplication"> <ref local="recorderApplication"/></property>
	</bean>
	
	<bean id="chatApplication" 
	    class="org.bigbluebutton.conference.service.chat.ChatApplication">
		<property name="roomsManager"> <ref local="chatRoomsManager"/></property>
	</bean>
	
	<bean id="chat.service" class="org.bigbluebutton.conference.service.chat.ChatService">
		<property name="chatApplication"> <ref local="chatApplication"/></property>
	</bean>
	
	<bean id="chatRoomsManager" class="org.bigbluebutton.conference.service.chat.ChatRoomsManager"/>
	<!-- END CHAT -->
	
	<!-- WHITEBOARD -->
	<bean id="whiteboardApplication" 
	    class="org.bigbluebutton.conference.service.whiteboard.WhiteboardApplication">
	    <property name="roomManager"> <ref local="whiteboardRoomManager"/></property>
	</bean>
	
	<bean id="whiteboard.service" class="org.bigbluebutton.conference.service.whiteboard.WhiteboardService">
		<property name="whiteboardApplication"> <ref local="whiteboardApplication"/></property>
	</bean>
	
	<bean id="whiteboardRoomManager" class="org.bigbluebutton.conference.service.whiteboard.WhiteboardRoomManager"/>
	<!-- END WHITEBOARD -->
	
	<!-- Starting the Spring Integration configuration for JMS integration -->

	<!-- INCOMING MESSAGES -->
	<!-- endMeetingRequest -->
	<jms:inbound-channel-adapter id="jmsInEndMeetingRequest"
		destination-name="endMeetingRequestEvents"
        channel="endMeetingRequest"
        extract-payload="true">
		<integration:poller>
			<integration:interval-trigger interval="5" time-unit="SECONDS"/>
		</integration:poller>
	</jms:inbound-channel-adapter>
	<integration:channel id="endMeetingRequest"/>
	<integration:service-activator input-channel="endMeetingRequest" ref="roomsManager" method="endMeetingRequest" />

	<!-- OUTGOING MESSAGES -->
	<integration:gateway id="conferenceEventListener" service-interface="org.bigbluebutton.conference.IConferenceEventListener" />

	<!-- conferenceStarted -->
	<integration:channel id="conferenceStarted" />
	<jms:outbound-channel-adapter id="conferenceStartedJmsOut" destination="conferenceStartedEvents" channel="conferenceStarted" />
    <bean id="conferenceStartedEvents" class="org.apache.activemq.command.ActiveMQQueue">
		<constructor-arg value="conferenceStartedEvents"/>
    </bean>

	<!-- conferenceEnded -->
	<integration:channel id="conferenceEnded" />
	<jms:outbound-channel-adapter id="conferenceEndedJmsOut" destination="conferenceEndedEvents" channel="conferenceEnded" />
    <bean id="conferenceEndedEvents" class="org.apache.activemq.command.ActiveMQQueue">
		<constructor-arg value="conferenceEndedEvents"/>
    </bean>

	<!-- participantsUpdated -->
	<integration:channel id="participantsUpdated" />
	<jms:outbound-channel-adapter id="participantsUpdatedJmsOut" destination="participantsUpdatedEvents" channel="participantsUpdated" />
	<bean id="participantsUpdatedEvents" class="org.apache.activemq.command.ActiveMQQueue">
		<constructor-arg value="participantsUpdatedEvents"/>
	</bean>
	
</beans>
