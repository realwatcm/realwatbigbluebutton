<?xml version="1.0" encoding="utf-8"?>

<!--
  BigBlueButton - http://www.bigbluebutton.org
  
  Copyright (c) 2008-2009 by respective authors (see below). All rights reserved.
  
  BigBlueButton is free software; you can redistribute it and/or modify it under the 
  terms of the GNU Lesser General Public License as published by the Free Software 
  Foundation; either version 3 of the License, or (at your option) any later 
  version. 
  
  BigBlueButton is distributed in the hope that it will be useful, but WITHOUT ANY 
  WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A 
  PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.
  
  You should have received a copy of the GNU Lesser General Public License along 
  with BigBlueButton; if not, If not, see <http://www.gnu.org/licenses/>.
 
  $Id: $
--> 
<mx:Module xmlns:mx="http://www.adobe.com/2006/mxml" layout="absolute" width="400" height="300" 
	implements="org.bigbluebutton.common.IBigBlueButtonModule" xmlns:maps="org.bigbluebutton.modules.whiteboard.maps.*"
	creationComplete="init()" xmlns:mate="http://mate.asfusion.com/">
	<mx:Script>
		<![CDATA[
			import org.bigbluebutton.common.LogUtil;
			import com.asfusion.mate.events.Dispatcher;
			
			import mx.controls.Alert;
			
			import org.bigbluebutton.modules.whiteboard.events.StartWhiteboardModuleEvent;
			import org.bigbluebutton.modules.whiteboard.events.StopWhiteboardModuleEvent;
					
			private var _moduleId:String = "HighlighterModule";
			private var _moduleName:String = "Highlighter Module";			
			private var _attributes:Object;
			
			private var globalDispatcher:Dispatcher;
			
			private function init():void{
				LogUtil.debug("HighlighterModule::init");
			}
				
			public function get moduleId():String {
				return _moduleId;
			}
			
			public function get moduleName():String {
				return _moduleName;
			}
		
			public function get uri():String {
				if (_attributes.mode == "PLAYBACK") {										
					return _attributes.uri + "/" + _attributes.playbackRoom;
				} 
				
				return _attributes.uri + "/" + _attributes.room;
			}
			
			public function get username():String {
				return _attributes.username;
			}
			
			public function get connection():NetConnection {
				return _attributes.connection;
			}
			
			public function get mode():String {
				if (_attributes.mode == null) {					
					//_attributes.mode = "PLAYBACK"
					_attributes.mode = "LIVE"
					LogUtil.debug('Setting HighlighterModule mode: ' + _attributes.mode);
				}
				LogUtil.debug('HighlighterModule mode: ' + _attributes.mode);
				return _attributes.mode;
			}
						
			public function get userid():Number {
				return _attributes.userid as Number;
			}
			
			public function get role():String {
				return _attributes.userrole as String;
			}
			
			public function start(attributes:Object):void {	
				LogUtil.debug("highlighter attr: " + attributes.username);
				_attributes = attributes;
				globalDispatcher = new Dispatcher();
				//eventMap.createHighlighterCanvas();
				
				var startEvent:StartWhiteboardModuleEvent = new StartWhiteboardModuleEvent();
				startEvent.attributes = attributes;
				globalDispatcher.dispatchEvent(startEvent);
								
			}
		
			public function stop():void {
				globalDispatcher.dispatchEvent(new StopWhiteboardModuleEvent(StopWhiteboardModuleEvent.STOP_HIGHLIGHTER_MODULE_EVENT));
			}
		]]>
	</mx:Script>
	
	<maps:WhiteboardEventMap id="eventMap" />
</mx:Module>
