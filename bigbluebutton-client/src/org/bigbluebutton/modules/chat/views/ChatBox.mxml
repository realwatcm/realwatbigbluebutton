<?xml version="1.0" encoding="utf-8"?>

<!--
  BigBlueButton open source conferencing system - http://www.bigbluebutton.org
  
  Copyright (c) 2010 BigBlueButton Inc. and by respective authors (see below).
  
  BigBlueButton is free software; you can redistribute it and/or modify it under the 
  terms of the GNU Lesser General Public License as published by the Free Software 
  Foundation; either version 2.1 of the License, or (at your option) any later 
  version. 
  
  BigBlueButton is distributed in the hope that it will be useful, but WITHOUT ANY 
  WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A 
  PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.
  
  You should have received a copy of the GNU Lesser General Public License along 
  with BigBlueButton; if not, see <http://www.gnu.org/licenses/>.
 
  $Id: $
-->

<mx:VBox xmlns:mx="http://www.adobe.com/2006/mxml" 
	xmlns:mate="http://mate.asfusion.com/"
	click="setMessageRead()" 
	creationComplete="onCreationComplete()" >
	
	<mate:Listener type="{ChatOptionsEvent.CHANGE_FONT_SIZE}" method="changeFontSize" />
	
	<mx:Script>
		<![CDATA[
			import org.bigbluebutton.modules.chat.model.ChatMessage;
			import mx.collections.ArrayCollection;
			import mx.controls.Button;
			import mx.core.ScrollPolicy;
			
			import org.bigbluebutton.modules.chat.events.ChatOptionsEvent;
			import org.bigbluebutton.modules.chat.views.ChatMessageRenderer;
			
			public static const COPY_ALL_BUTTON:String = "Copy All Text";
			
			public var read:Boolean = true;
			public var participantLoggedOut:Boolean = false;
			
			[Bindable]
			private var backgroundColor:uint = 0x000000;
			private var lastSenderId:String = "";
			private var lastTime:String = "";
			
			[Bindable] private var messages:ArrayCollection = new ArrayCollection();
			private var lastCount:Number = 0;
			
			private var scrollTimer:Timer;
			
			private var scrollBarWorkaround:Boolean = false;
			
			private function onCreationComplete():void {
				addContextMenuItems();
				scrollTimer = new Timer(750, 2);
				scrollTimer.addEventListener(TimerEvent.TIMER, onScrollTimer);
				
				/**
				 * The next two lines will force the scrollbar to the end of the message when displaying the
				 * chat history.
				 */
				callLater(scrollToBottom);	
				scrollTimer.start();			
			}

			public function showNewMessage(message:String, translate:Boolean, language:String = null):void {	
				var timeString:String = getHours() + ":" + getMinutes();
				var components:Array = message.split("|");
				
				var msg:ChatMessage = new ChatMessage();
				msg.lastSenderId = lastSenderId;
				lastSenderId = components[5];
				msg.senderId = components[5];
				
				msg.senderLanguage = components[4].toString();
				msg.receiverLanguage = language.toString();
				msg.translate = translate;

				msg.translatedText = components[0];
				msg.senderText = components[0];
				
				msg.name = components[1];
				msg.senderColor = uint(components[2]);
				msg.translatedColor = msg.senderColor;
				msg.senderTime = components[3];			
				msg.time = timeString;
				msg.lastTime = lastTime;
				lastTime = timeString;
				
				/*********************************
				 * We put a blank message at the end to force the scrollbar to display the
				 * REAL last message.
				 */
				if (!scrollBarWorkaround) {
					scrollBarWorkaround = true;
					var blankStr:String = "                 \n";
					var shimMsg:ChatMessage = new ChatMessage();
					shimMsg.lastSenderId = blankStr;
					shimMsg.senderId = blankStr;					
					shimMsg.senderLanguage = blankStr;
					shimMsg.receiverLanguage = blankStr;
					shimMsg.translate = false;	
					shimMsg.translatedText = blankStr;
					shimMsg.senderText = blankStr;					
					shimMsg.name = blankStr;
					shimMsg.senderColor = msg.senderColor;
					shimMsg.translatedColor = 0xCECECE;
					shimMsg.senderTime = blankStr;			
					shimMsg.time = blankStr;
					shimMsg.lastTime = blankStr;

					messages.addItem(shimMsg);
				}
				
				/**
				 * Add the REAL message before the shim message above. 
				 */				 
				messages.addItemAt(msg, messages.length - 1);
					
				/**
				 * Trigger to force the scrollbar to show the last message.
				 */	
				 if (scrollTimer != null) scrollTimer.start();
			}
			
			/**
			 * Magic sauce to force scrollbar to the bottom message. This took a lot
			 * of trial and error. If you change this, make sure you know what you are
			 * doing as I don't know why it works, but it does. (ralam Nov 3, 2010)
			 */
			private function scrollToBottom():void {
				chatMessagesList.invalidateSize();
				chatMessagesList.invalidateDisplayList();
				chatMessagesList.scrollToIndex(messages.length);
				chatMessagesList.verticalScrollPosition = chatMessagesList.maxVerticalScrollPosition;		
				chatMessagesList.validateDisplayList();
				chatMessagesList.validateNow();		
			}
			
			private function onScrollTimer(event:TimerEvent):void {
				scrollToBottom();
			}
			
			public static function getMinutes():String {
				var time:Date = new Date();
				var minutes:String;
				if (time.minutes < 10) minutes = "0" + time.minutes;
				else minutes = "" + time.minutes;
				return minutes;
			}
			
			public static function getHours():String {
				var time:Date = new Date();
				var hours:String;
				if (time.hours < 10) hours = "0" + time.hours;
				else hours = "" + time.hours;
				return hours
			}
			
			public function setMessageUnread():void{
				this.read = false;
				backgroundColor = 0xFFFF00;
			}
			
			public function setMessageRead():void{
				this.read = true;
				backgroundColor = 0x000000;
			}
			
			private function onLinkClick(e:TextEvent):void{
				var url:URLRequest = new URLRequest(e.text);
				navigateToURL(url, '_blank');
			}
			
			private function changeFontSize(e:ChatOptionsEvent):void{
				this.setStyle("fontSize", e.fontSize);
			}
			
			private function addContextMenuItems():void{
				var contextMenu:ContextMenu = new ContextMenu();
				contextMenu.hideBuiltInItems();
				
				var copyAllButton:ContextMenuItem = new ContextMenuItem(COPY_ALL_BUTTON);
				copyAllButton.addEventListener(ContextMenuEvent.MENU_ITEM_SELECT, menuItemHandler);
				contextMenu.customItems.push(copyAllButton);
				
				this.contextMenu = contextMenu;
			}
			
			private function menuItemHandler(e:ContextMenuEvent):void{
				if (e.target.caption == COPY_ALL_BUTTON){
					System.setClipboard(getAllAsString());
				}
			}
			
			private function getAllAsString():String{
				var allText:String = "";
				for (var i:int = 0; i < messages.length; i++){
					var item:ChatMessage = messages.getItemAt(i) as ChatMessage;
					allText += "\n" + item.name + " - " + item.time + " : " + item.translatedText;
				}
				return allText;
			}
			
		]]>
	</mx:Script>
	
	<mx:List width="100%" height="100%" id="chatMessagesList" selectable="false" variableRowHeight="true"
			 itemRenderer="org.bigbluebutton.modules.chat.views.ChatMessageRenderer" dataProvider="{messages}" />
</mx:VBox>
