<?xml version="1.0" encoding="utf-8"?>

<!--
  BigBlueButton open source conferencing system - http://www.bigbluebutton.org
  
  Copyright (c) 2010 BigBlueButton Inc. and by respective authors (see below).
  
  BigBlueButton is free software; you can redistribute it and/or modify it under the 
  terms of the GNU Lesser General Public License as published by the Free Software 
  Foundation; either version 2.1 of the License, or (at your option) any later 
  version. 
  
  BigBlueButton is distributed in the hope that it will be useful, but WITHOUT ANY 
  WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A 
  PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.
  
  You should have received a copy of the GNU Lesser General Public License along 
  with BigBlueButton; if not, see <http://www.gnu.org/licenses/>.
 
  $Id: $
-->

<mx:VBox xmlns:mx="http://www.adobe.com/2006/mxml" creationComplete="init()" xmlns:mate="http://mate.asfusion.com/">
	
	<mate:Listener type="{ChatOptionsEvent.TRANSLATION_OPTION_ENABLED}" method="toggleTranslateEnabled" />
	
	<mx:Script>
		<![CDATA[
			import com.adobe.utils.StringUtil;
			
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.events.ListEvent;
			import mx.utils.StringUtil;
			
			import org.bigbluebutton.modules.chat.events.ChatOptionsEvent;
			import org.bigbluebutton.util.i18n.ResourceUtil;
			
			[Bindable] public var participants:ArrayCollection;
			[Bindable] public var chatView:ChatView;
			[Bindable] private var fontSizes:Array = ['8', '10', '12', '14', '16', '18'];
			
			[Bindable] private var langNames:Array=[ 
								'AFRIKAANS' , 
								'ALBANIAN' , 
								'ARABIC' , 
								'BELARUSIAN' , 
								'BULGARIAN' , 
								'CATALAN' , 
								'CHINESE' , 
								'CHINESE_SIMPLIFIED' , 
								'CHINESE_TRADITIONAL' , 
								'CZECH' ,  
								'DANISH' , 
								'DUTCH',   
								'ENGLISH' , 
								'ESTONIAN' , 
								'FILIPINO' , 
								'FINNISH' , 
								'FRENCH' ,  
								'GALICIAN' , 
								'GERMAN' , 
								'GREEK' , 
								'HEBREW' , 
								'HINDI' , 
								'HUNGARIAN' , 
								'ICELANDIC' , 
								'INDONESIAN' , 
								'IRISH' , 
								'ITALIAN' , 
								'JAPANESE' , 
								'KOREAN' , 
								'LATVIAN' , 
								'LITHUANIAN' , 
								'MACEDONIAN' , 
								'MALAY' , 
								'MALTESE' , 
								'NORWEGIAN' , 
								'PERSIAN' , 
								'POLISH' , 
								'PORTUGUESE' , 
								'ROMANIAN' , 
								'RUSSIAN' , 
								'SERBIAN' , 
								'SLOVAK' , 
								'SLOVENIAN' , 
								'SPANISH' , 
								'SWAHILI' , 
								'SWEDISH' , 
								'THAI' , 
								'TURKISH' , 
								'UKRAINIAN' , 
								'VIETNAMESE' , 
								'WELSH' ,  
								'YIDDISH' ]  ;
			
			private var langCodes:Array=[
									'af', 
									'sq', 
									'ar', 
									'be', 
									'bg', 
									'ca', 
									'zh', 
									'zh-CN', 
									'zh-TW', 
									'cs', 
									'da', 
									'nl',   
									'en', 
									'et', 
									'tl', 
									'fi', 
									'fr', 
									'gl', 
									'de', 
									'el', 
									'iw', 
									'hi', 
									'hu', 
									'is', 
									'id', 
									'ga', 
									'it', 
									'ja', 
									'ko', 
									'lv', 
									'lt', 
									'mk', 
									'ms', 
									'mt', 
									'no', 
									'fa', 
									'pl', 
									'pt', 
									'ro', 
									'ru', 
									'sr', 
									'sk', 
									'sl', 
									'es', 
									'sw', 
									'sv', 
									'th', 
									'tr', 
									'uk', 
									'vi', 
									'cy', 
									'yi']  ;
			
			private function init():void{
				participants = new ArrayCollection();
				
				var langCode:String = (ExternalInterface.call('getLanguage') as String);
				if (langCode == null) return;
				
				var language:String = langCode.split("_")[0];
				if (langCodes.indexOf(language) != -1){
					langComboBox.selectedIndex = langCodes.indexOf(language);
					changeLanguage();
				} 
			}


			protected function openPrivateChat(event:ListEvent):void{
				if (participantsList.selectedIndex == -1) return;
				var id:String = participantsList.selectedItem.userid;
				participantsList.selectedIndex = -1;
				chatView.openChatBoxFor(id);
			}
			
			private function changeFontSize():void{
				var e:ChatOptionsEvent = new ChatOptionsEvent(ChatOptionsEvent.CHANGE_FONT_SIZE);
				e.fontSize = int(cmbFontSize.selectedItem);
				dispatchEvent(e);
			}
			
			private function changeLanguage():void
			{
				var lang:String = this.langCodes[this.langComboBox.selectedIndex];
				var e:ChatOptionsEvent = new ChatOptionsEvent(ChatOptionsEvent.CHANGE_LANGUAGE);
				e.language= lang;
				dispatchEvent(e);
			}
			
			private function toggleTranslation():void
			{
				var e:ChatOptionsEvent=new ChatOptionsEvent(ChatOptionsEvent.TOGGLE_TRANSLATE);	
				e.translateOn = autoTransCheckBox.selected;
				dispatchEvent(e);
			}
			
			private function toggleTranslateEnabled(e:ChatOptionsEvent):void{
				if (e.translationEnabled){
					langComboBox.visible = true;
					autoTransCheckBox.visible = true;
				} else {
					langComboBox.visible = false;
					autoTransCheckBox.visible = false;
				}
				autoTransCheckBox.selected = e.translateOn;
				toggleTranslation();
			}
			
			override protected function resourcesChanged():void{
				super.resourcesChanged();
				
				var language:String = overrideNorwegian(ResourceUtil.getInstance().getCurrentLanguageCode().split("_")[0]);
				if ((langCodes.indexOf(language) != -1) && (langComboBox != null)){
					langComboBox.selectedIndex = langCodes.indexOf(language);
					changeLanguage();
				} 
			}
			
			private function overrideNorwegian(lang:String):String{
				var code:String = lang;
				if (lang == "nb") code = "no"; //Code for norwegian in the google api is different than in bbb localization (ours is nb, google is no)
				return code;
			}

		]]>
	</mx:Script>
	
	<mx:HBox width="100%" height="100%" >
		<mx:VBox height="100%" width="50%">
			<mx:Label id="lblSelect" text="{ResourceUtil.getInstance().getString('bbb.chat.privateChatSelect')}" />
			<mx:List id="participantsList" height="100%" width="100%" dataProvider="{chatView.participants}" change="openPrivateChat(event)">
			</mx:List>
		</mx:VBox>
		<mx:VBox id="optionsBox" height="100%" width="50%" >
			<mx:Label text="{ResourceUtil.getInstance().getString('bbb.chat.chatOptions')}" />
			<mx:HBox width="100%">
				<mx:Label text="{ResourceUtil.getInstance().getString('bbb.chat.fontSize')}" />
				<mx:ComboBox width="60" id="cmbFontSize" dataProvider="{fontSizes}" close="changeFontSize()" selectedIndex="1" />
			</mx:HBox>
			<mx:ComboBox id="langComboBox" dataProvider="{this.langNames}" selectedIndex="12"  change="changeLanguage()" rowCount="15" />
			<mx:CheckBox id="autoTransCheckBox" selected="false" label="AutoTranslate" toolTip="Auto detect language and translate" change="toggleTranslation()"/>
		</mx:VBox>
	</mx:HBox>
	
	
</mx:VBox>
