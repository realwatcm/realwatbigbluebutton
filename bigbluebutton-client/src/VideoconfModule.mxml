<?xml version="1.0" encoding="utf-8"?>
<mx:Module xmlns:mx="http://www.adobe.com/2006/mxml" layout="absolute" width="400" height="300" 
	xmlns:maps="org.bigbluebutton.modules.videoconf.maps.*" implements="org.bigbluebutton.common.IBigBlueButtonModule">
	<mx:Script>
		<![CDATA[
			import com.asfusion.mate.events.Dispatcher;
			
			import mx.controls.Alert;
			
			import org.bigbluebutton.common.LogUtil;
			import org.bigbluebutton.main.events.CloseWindowEvent;
			import org.bigbluebutton.main.events.OpenWindowEvent;
			import org.bigbluebutton.modules.videoconf.business.VideoProxy;
			import org.bigbluebutton.modules.videoconf.events.CloseAllWindowsEvent;
			
			private var _moduleId:String = "VideoconfModule";
			private var _moduleName:String = "Videoconf Module";			
			private var _attributes:Object; 
			private var proxy:VideoProxy;
			private var mockProxy:VideoProxy;
			
			private function onCreationComplete():void {
				LogUtil.debug("VideoconfModule initialized");	
			}
				
			public function get moduleId():String {
				return _moduleId;
			}
			
			public function get moduleName():String {
				return _moduleName;
			}
		
			public function get uri():String {
				if (_attributes.mode == "PLAYBACK") {										
					return _attributes.uri + "/" + _attributes.playbackRoom;
				} 
				
				return _attributes.uri + "/" + _attributes.room;
			}
			
			public function get username():String {
				return _attributes.username;
			}
			
			public function get connection():NetConnection {
				return proxy.connection;
			}
			
			public function get mockConnection():NetConnection {
				return mockProxy.connection;
			}
			
			public function get mode():String {
				if (_attributes.mode == null) {					
					//_attributes.mode = "PLAYBACK"
					_attributes.mode = "LIVE"
					LogUtil.debug('Setting NotesModule mode: ' + _attributes.mode);
				}
				LogUtil.debug('VideoconfVModule mode: ' + _attributes.mode);
				return _attributes.mode;
			}
						
			public function get userid():Number {
				return _attributes.userid as Number;
			}
			
			public function get role():String {
				return _attributes.userrole as String;
			}
			
			public function get quality():Number{
				return Number(_attributes.videoQuality);
			}
			
			public function get presenterShareOnly():Boolean{
				if (_attributes.presenterShareOnly == "true") return true;
				else return false;
			}
			
			public function start(attributes:Object):void {	
				LogUtil.debug("Videoconf attr: " + attributes.username);
				_attributes = attributes;
				proxy = new VideoProxy(uri);
				
				eventMap.module = this;
				eventMap.proxy = proxy;
				eventMap.addToolbarButton();
			}
		
			public function stop():void {
				eventMap.stopModule();
			}
			
			public function mockConnect():void {
				mockProxy = new VideoProxy(proxy.connection.uri.substring(0, proxy.connection.uri.indexOf("video") + 5));
			}
		]]>
	</mx:Script>
	
	<maps:VideoEventMap id="eventMap"/>
</mx:Module>
